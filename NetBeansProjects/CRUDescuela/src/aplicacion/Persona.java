/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author jeison tamara
 */
public class Persona extends javax.swing.JFrame {
    //declaramos como glovbales las variables que utilizaremos para la conexion con la blase de datos 
    public static final String URL = "jdbc:mysql://localhost:3306/escuela?autoReconnet=true&useSSL=false";
    public static final String usuario = "root";
    public static final String contraseña = "95050201";
    PreparedStatement ps;
    ResultSet rs;
    
    //creamos el metodo para realizar la conexion con la base de datos
    public Connection getConnection(){//creamos un metodo para establecer la conexion con la base de datos
        Connection conexion = null;//creamos un objeto de tipo coneccion
        
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");//utilizamos la clase .forname para utilizar el driver de conexion
            conexion = (Connection) DriverManager.getConnection(URL,usuario,contraseña);//utilizamos el driver para obtener la conexion 
            //JOptionPane.showMessageDialog(null,"Conexion exitosa");//mostramos si la conexion ha sido exitosa
        }catch(Exception ex){//capturamos las escepciones que se puedan presentar
            System.err.println("Error, "+ex);
        }
        return conexion;//retornamos la conexcion
    }
    
    public void limpiarCajas(){
        //regresamos el texto a vacio de cada uno de las cajas
        boxBuscar.setText(null);
        boxClave.setText(null);
        boxNombre.setText(null);
        boxDomicilio.setText(null);
        boxCelular.setText(null);
        boxCorreo.setText(null);
        boxFecha.setText(null);
        comboGenero.setSelectedIndex(0);//regresamos al primer posicion del combobox
    }
    
    public Persona() {
        initComponents();
        boxIdpersona.setVisible(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiquetaClave = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        etiquetaDomicilio = new javax.swing.JLabel();
        etiquetaCelular = new javax.swing.JLabel();
        etiquetaCorreo = new javax.swing.JLabel();
        etiquetaFecha = new javax.swing.JLabel();
        etiquetaGenero = new javax.swing.JLabel();
        comboGenero = new javax.swing.JComboBox<>();
        boxBuscar = new javax.swing.JTextField();
        boxIdpersona = new javax.swing.JTextField();
        boxClave = new javax.swing.JTextField();
        boxNombre = new javax.swing.JTextField();
        boxDomicilio = new javax.swing.JTextField();
        boxCelular = new javax.swing.JTextField();
        boxCorreo = new javax.swing.JTextField();
        boxFecha = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        botonInsertar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        etiquetaClave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaClave.setText("Clave:");

        etiquetaNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaNombre.setText("Nombre:");

        etiquetaDomicilio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaDomicilio.setText("Domicilio:");

        etiquetaCelular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaCelular.setText("Celular:");

        etiquetaCorreo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaCorreo.setText("Correo Electronico:");

        etiquetaFecha.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaFecha.setText("Fecha Nacimiento: ");

        etiquetaGenero.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etiquetaGenero.setText("Genero: ");

        comboGenero.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Masculino", "Femenino" }));

        boxBuscar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxIdpersona.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxClave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxDomicilio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxCelular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxCorreo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        boxFecha.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonInsertar.setText("Insertar");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonLimpiar.setText("Limpiar");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaClave)
                                    .addComponent(etiquetaNombre)
                                    .addComponent(etiquetaDomicilio)
                                    .addComponent(etiquetaCelular))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(boxCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                                    .addComponent(boxDomicilio)
                                    .addComponent(boxNombre)
                                    .addComponent(boxClave)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaCorreo)
                                    .addComponent(etiquetaFecha))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxFecha)
                                    .addComponent(boxCorreo)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(etiquetaGenero)
                                .addGap(18, 18, 18)
                                .addComponent(comboGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(botonInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(botonModificar)
                                .addGap(18, 18, 18)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boxIdpersona)
                            .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boxIdpersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaClave)
                    .addComponent(boxClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombre)
                    .addComponent(boxNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaDomicilio)
                    .addComponent(boxDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaCelular)
                    .addComponent(boxCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaCorreo)
                    .addComponent(boxCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaFecha)
                    .addComponent(boxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaGenero)
                    .addComponent(comboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonModificar)
                    .addComponent(botonEliminar)
                    .addComponent(botonLimpiar)
                    .addComponent(botonInsertar))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //para el boton insertar
    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        Connection conexion = null;//creamos un objeto de tipo conexion
        
        try{
            conexion = getConnection();//creaos la conexion con la base de datos mediante el metodo getconnection
            ps = conexion.prepareStatement("insert into persona(clave,nombre,domicilio,celular,correo_electronico,fecha_nacimiento,genero) values(?,?,?,?,?,?,?)");//con la ayuda del prepare statemen le ingresamos la linea de codigo para insertar los valores pero estos los pasamos con signo ? para despues obtenerlos de las cajas de texto corespondientes
            //le ingresamos los valores de cada columna con la ayuda de .serstring
            ps.setString(1, boxClave.getText());//obtenemos los valores de las cajas de texto y el dato entero hace referencia a la posicion de los signos ? ingresados anteriormente
            ps.setString(2, boxNombre.getText());
            ps.setString(3, boxDomicilio.getText());
            ps.setString(4, boxCelular.getText());
            ps.setString(5, boxCorreo.getText());
            ps.setDate(6, Date.valueOf(boxFecha.getText()));
            ps.setString(7, comboGenero.getSelectedItem().toString());
            
            int resultado = ps.executeUpdate();//ejecutamos la insercion
            
            if(resultado>0){
                JOptionPane.showMessageDialog(null, "Registro insertado correctamente");
                limpiarCajas();
            }else{
                JOptionPane.showMessageDialog(null, "Error al insertar registro");
                limpiarCajas();
            }
            conexion.close();
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
    }//GEN-LAST:event_botonInsertarActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        limpiarCajas();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        Connection conexion = null;
        try{
            conexion = getConnection();
            ps = conexion.prepareStatement("select * from persona where clave=?");
            ps.setString(1, boxBuscar.getText());
            rs = ps.executeQuery();
            
            if(rs.next()){
                boxIdpersona.setText(String.valueOf(rs.getInt("idpersona")));
                boxClave.setText(rs.getString("clave"));
                boxNombre.setText(rs.getString("nombre"));
                boxDomicilio.setText(rs.getString("domicilio"));
                boxCelular.setText(rs.getString("celular"));
                boxCorreo.setText(rs.getString("correo_electronico"));
                boxFecha.setText(String.valueOf(rs.getDate("fecha_nacimiento")));
                comboGenero.setSelectedItem(rs.getString("genero"));
            }else{
                JOptionPane.showMessageDialog(null, "No existe una persona con esa clave");
            }
            conexion.close();
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        Connection conexion = null;//creamos un objeto de tipo conexion
        
        try{
            conexion = getConnection();//creaos la conexion con la base de datos mediante el metodo getconnection
            ps = conexion.prepareStatement("update persona set clave=?,nombre=?,domicilio=?,celular=?,correo_electronico=?,fecha_nacimiento=?,genero=? where idPersona=?");//con la ayuda del prepare statemen le ingresamos la linea de codigo para modificar los valores pero estos los pasamos con signo ? para despues obtenerlos de las cajas de texto corespondientes
            //le ingresamos los valores de cada columna con la ayuda de .serstring
            ps.setString(1, boxClave.getText());//obtenemos los valores de las cajas de texto y el dato entero hace referencia a la posicion de los signos ? ingresados anteriormente
            ps.setString(2, boxNombre.getText());
            ps.setString(3, boxDomicilio.getText());
            ps.setString(4, boxCelular.getText());
            ps.setString(5, boxCorreo.getText());
            ps.setDate(6, Date.valueOf(boxFecha.getText()));
            ps.setString(7, comboGenero.getSelectedItem().toString());
            ps.setInt(8, Integer.parseInt(boxIdpersona.getText()));
            
            int resultado = ps.executeUpdate();//ejecutamos la modificacion
            
            if(resultado>0){
                JOptionPane.showMessageDialog(null, "Registro modificado correctamente");
                limpiarCajas();
            }else{
                JOptionPane.showMessageDialog(null, "Error al modificar registro");
                limpiarCajas();
            }
            conexion.close();
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        Connection conexion = null;//creamos un objeto de tipo conexion
        
        try{
            conexion = getConnection();//creaos la conexion con la base de datos mediante el metodo getconnection
            ps = conexion.prepareStatement("delete from persona where idPersona=?");//con la ayuda del prepare statemen le ingresamos la linea de codigo para eliminar los valores 
            //le ingresamos los valores de cada columna con la ayuda de .serstring
            ps.setInt(1, Integer.parseInt(boxIdpersona.getText()));
            
            int resultado = ps.executeUpdate();//ejecutamos la eliminacion
            
            if(resultado>0){
                JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
                limpiarCajas();
            }else{
                JOptionPane.showMessageDialog(null, "Error al eliminar registro");
                limpiarCajas();
            }
            conexion.close();
            
        }catch(Exception ex){
            System.err.println("Error, "+ex);
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Persona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JTextField boxBuscar;
    private javax.swing.JTextField boxCelular;
    private javax.swing.JTextField boxClave;
    private javax.swing.JTextField boxCorreo;
    private javax.swing.JTextField boxDomicilio;
    private javax.swing.JTextField boxFecha;
    private javax.swing.JTextField boxIdpersona;
    private javax.swing.JTextField boxNombre;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.JLabel etiquetaCelular;
    private javax.swing.JLabel etiquetaClave;
    private javax.swing.JLabel etiquetaCorreo;
    private javax.swing.JLabel etiquetaDomicilio;
    private javax.swing.JLabel etiquetaFecha;
    private javax.swing.JLabel etiquetaGenero;
    private javax.swing.JLabel etiquetaNombre;
    // End of variables declaration//GEN-END:variables
}
